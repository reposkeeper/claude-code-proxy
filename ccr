#!/bin/bash

# ccr - Claude startup script
# Usage: ccr [ucloud|glm]

# Script directory
SCRIPT_DIR="/Users/reposkeeper/devops/xxhz/claude-code-proxy"
CLAUDE_PATH="/opt/homebrew/bin/claude"
UV_PATH="/opt/homebrew/bin/uv"

show_help() {
    echo "Usage: ccr [ucloud|glm]"
    echo ""
    echo "Options:"
    echo "  ucloud    Start Claude with UCloud environment variables"
    echo "  glm       Start Claude with GLM environment variables"
    echo "  -h, --help Show this help message"
    echo ""
    echo "Examples:"
    echo "  ccr ucloud"
    echo "  ccr glm"
}

# Check arguments
if [ $# -eq 0 ]; then
    echo "Error: Please provide an argument (ucloud or glm)"
    show_help
    exit 1
fi

# Global variable to store proxy PID
PROXY_PID=""

# Cleanup function to terminate proxy process on exit
cleanup() {
    if [ -n "$PROXY_PID" ]; then
        echo "Stopping proxy server (PID: $PROXY_PID)..."
        kill $PROXY_PID 2>/dev/null
        wait $PROXY_PID 2>/dev/null
        echo "Proxy server stopped"
    fi
}

# Set signal handling to ensure proxy cleanup on script exit
trap cleanup EXIT INT TERM

case "$1" in
    ucloud)
        ANTHROPIC_BASE_URL="http://127.0.0.1:8082"
        ANTHROPIC_AUTH_TOKEN="your_ucloud_token_here"
        
        # Start proxy server
        echo "Starting proxy server..."
        # Create logs directory if it doesn't exist
        LOGS_DIR="${SCRIPT_DIR}/logs"
        mkdir -p "$LOGS_DIR"
        LOG_FILE="${LOGS_DIR}/proxy_$(date +%Y%m%d_%H%M%S).log"
        cd "$SCRIPT_DIR"
        "$UV_PATH" run "${SCRIPT_DIR}/start_proxy.py" > "$LOG_FILE" 2>&1 &
        PROXY_PID=$!
        
        # Wait a moment to ensure proxy starts
        sleep 2
        
        # Check if proxy started successfully
        if kill -0 $PROXY_PID 2>/dev/null; then
            echo "Proxy server started (PID: $PROXY_PID), log file: $LOG_FILE"
        else
            echo "Error: Proxy server failed to start, please check log file: $LOG_FILE"
            exit 1
        fi
        ;;
    glm)
        ANTHROPIC_BASE_URL="https://open.bigmodel.cn/api/anthropic"
        ANTHROPIC_AUTH_TOKEN="your_glm_token_here"
        ;;
    -h|--help)
        show_help
        exit 0
        ;;
    *)
        echo "Error: Unknown argument '$1'"
        show_help
        exit 1
        ;;
esac

# Start Claude
echo "Starting Claude..."
ANTHROPIC_BASE_URL="$ANTHROPIC_BASE_URL" ANTHROPIC_AUTH_TOKEN="$ANTHROPIC_AUTH_TOKEN" "$CLAUDE_PATH"
